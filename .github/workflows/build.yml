name: Build Theos Tweak

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest # Используем macOS, так как Xcode доступен только на ней.

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # Скачиваем ваш код из репозитория

    - name: Install Theos Dependencies
      run: |
        # Установка зависимостей Homebrew, необходимых для Theos
        brew install dpkg xz coreutils rsync openssh git

    - name: Clone and Setup Theos
      run: |
        # Клонируем Theos в домашний каталог пользователя (~/theos).
        # Это гарантирует, что у пользователя есть права на запись.
        git clone --recursive https://github.com/theos/theos.git ~/theos
        
        # Устанавливаем переменные окружения для Theos в этом рабочем процессе
        echo "THEOS=~/theos" >> $GITHUB_ENV
        echo "$HOME/theos/bin" >> $GITHUB_PATH # Используем $HOME для универсальности

    - name: Configure Theos Environment Variables
      run: |
        # Устанавливаем путь к SDK iOS, который Theos использует для компиляции
        echo "THEOS_SDK_PATH=$(xcode-select -p)/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk" >> $GITHUB_ENV
        # Примечание: Переменные вроде THEOS_DEVICE_IP не нужны для просто сборки .dylib.

    - name: Verify Dobby Library Presence
      run: |
        # Проверяем, что файл libdobby.a существует в вашем репозитории
        # по пути, указанному в вашем Makefile.
        if [ ! -f "dobby/universal/libdobby.a" ]; then
          echo "Error: dobby/universal/libdobby.a not found. Please ensure it's in your repository."
          exit 1
        fi
      working-directory: ${{ github.workspace }}

    - name: Build Tweak (dylib only)
      run: |
        # Выполняем команду 'make' для сборки вашего твика.
        # Theos скомпилирует исходники и создаст .dylib файл
        # в директории .theos/obj/debug/ (или release/).
        make
      working-directory: ${{ github.workspace }} # Убедитесь, что команда 'make' выполняется в корне вашего репозитория

    - name: Find and Upload dylib Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DobbyIphoneTweak-dylib # Имя артефакта, которое вы сможете скачать
        path: |
          # Theos помещает скомпилированный .dylib сюда.
          # Убедитесь, что 'DobbyIphoneTweak' соответствует значению TWEAK_NAME в вашем Makefile.
          .theos/obj/debug/DobbyIphoneTweak.dylib
          .theos/obj/release/DobbyIphoneTweak.dylib
        if-no-files-found: error # Завершаем с ошибкой, если .dylib не найден